<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:tns="http://gridu.qa.payment.griddynamics.com/springsoap/gen"
           targetNamespace="http://gridu.qa.payment.griddynamics.com/springsoap/gen"
           elementFormDefault="qualified">

    <xs:element name="createUserRequest">
        <xs:annotation>
            <xs:documentation>Create a new user</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="name" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>User's firstname</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="lastName" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>User's lastname</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="email" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>User's email address</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="birthday" type="xs:date" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>User's birth date (optional)</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="addresses" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>List of user's addresses</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="address" maxOccurs="unbounded" type="tns:newAddress"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element name="payments" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>List of user's payments</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="payment" maxOccurs="unbounded" type="tns:newPayment"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="createUserResponse">
        <xs:annotation>
            <xs:documentation>Returns created user</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="userDetails" type="tns:userDetails"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>


    <xs:element name="getUserDetailsRequest">
        <xs:annotation>
            <xs:documentation>Get details for the user by id</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="userId" type="tns:positiveLong"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="getUserDetailsResponse">
        <xs:annotation>
            <xs:documentation>Full information for the user returned by given id</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="userDetails" type="tns:userDetails"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="updateUserRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="userDetails" type="tns:userDetails"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="updateUserResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="userDetails" type="tns:userDetails"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="deleteUserRequest">
        <xs:annotation>
            <xs:documentation>Delete information for the user with given id</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="userId" type="tns:positiveLong"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="deleteUserResponse">
        <xs:annotation>
            <xs:documentation>Just a constant message (if successfully deleted)</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="message" type="xs:string" fixed="Successfully delete user"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="userDetails">
        <xs:sequence>
            <xs:element name="id" type="tns:positiveLong"/>
            <xs:element name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>User's firstname</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="lastName" type="xs:string">
                <xs:annotation>
                    <xs:documentation>User's lastname</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="email" type="xs:string">
                <xs:annotation>
                    <xs:documentation>User's email address</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="birthday" type="xs:date" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>User's birth date (optional)</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="addresses" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>List of user's addresses</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="address" maxOccurs="unbounded" type="tns:existingAddress"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="payments" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>List of user's payments</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="payment" maxOccurs="unbounded" type="tns:existingPayment"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="newAddress">
        <xs:sequence>
            <xs:element name="state" type="tns:state"/>
            <xs:element name="city" type="xs:string"/>
            <xs:element name="zip">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:pattern value="[0-9]{5}"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="line1" type="xs:string"/>
            <xs:element name="line2" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="existingAddress">
        <xs:annotation>
            <xs:documentation>Same as for address creation, but have id (for already saved objects)</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="tns:newAddress">
                <xs:sequence>
                    <xs:element name="id" type="tns:positiveLong" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="newPayment">
        <xs:sequence>
            <xs:element name="cardNumber" type="xs:string"/>
            <xs:element name="expiryYear">
                <xs:simpleType>
                    <xs:restriction base="xs:positiveInteger">
                        <xs:maxInclusive value="9999"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="expiryMonth">
                <xs:simpleType>
                    <xs:restriction base="xs:positiveInteger">
                        <xs:maxInclusive value="12"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="cardholder" type="xs:string"/>
            <xs:element name="cvv">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:pattern value="[0-9]{3,4}"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="existingPayment">
        <xs:annotation>
            <xs:documentation>Same as for payment creation, but have id (for already saved objects)</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="tns:newPayment">
                <xs:sequence>
                    <xs:element name="id" type="tns:positiveLong" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:simpleType name="positiveLong">
        <xs:restriction base="xs:long">
            <xs:minInclusive value="1"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="state">
        <xs:restriction base="xs:string">
            <xs:enumeration value="AA"/>
            <xs:enumeration value="AE"/>
            <xs:enumeration value="AK"/>
            <xs:enumeration value="AL"/>
            <xs:enumeration value="AP"/>
            <xs:enumeration value="AR"/>
            <xs:enumeration value="AS"/>
            <xs:enumeration value="AZ"/>
            <xs:enumeration value="CA"/>
            <xs:enumeration value="CO"/>
            <xs:enumeration value="CT"/>
            <xs:enumeration value="DC"/>
            <xs:enumeration value="DE"/>
            <xs:enumeration value="FL"/>
            <xs:enumeration value="FM"/>
            <xs:enumeration value="GA"/>
            <xs:enumeration value="GU"/>
            <xs:enumeration value="HI"/>
            <xs:enumeration value="IA"/>
            <xs:enumeration value="ID"/>
            <xs:enumeration value="IL"/>
            <xs:enumeration value="IN"/>
            <xs:enumeration value="KS"/>
            <xs:enumeration value="KY"/>
            <xs:enumeration value="LA"/>
            <xs:enumeration value="MA"/>
            <xs:enumeration value="MD"/>
            <xs:enumeration value="ME"/>
            <xs:enumeration value="MH"/>
            <xs:enumeration value="MI"/>
            <xs:enumeration value="MN"/>
            <xs:enumeration value="MO"/>
            <xs:enumeration value="MP"/>
            <xs:enumeration value="MS"/>
            <xs:enumeration value="MT"/>
            <xs:enumeration value="NC"/>
            <xs:enumeration value="ND"/>
            <xs:enumeration value="NE"/>
            <xs:enumeration value="NH"/>
            <xs:enumeration value="NM"/>
            <xs:enumeration value="NV"/>
            <xs:enumeration value="NY"/>
            <xs:enumeration value="OH"/>
            <xs:enumeration value="OK"/>
            <xs:enumeration value="OR"/>
            <xs:enumeration value="PA"/>
            <xs:enumeration value="PR"/>
            <xs:enumeration value="PW"/>
            <xs:enumeration value="RI"/>
            <xs:enumeration value="SC"/>
            <xs:enumeration value="SD"/>
            <xs:enumeration value="TN"/>
            <xs:enumeration value="TX"/>
            <xs:enumeration value="UT"/>
            <xs:enumeration value="VA"/>
            <xs:enumeration value="VI"/>
            <xs:enumeration value="VT"/>
            <xs:enumeration value="WA"/>
            <xs:enumeration value="WI"/>
            <xs:enumeration value="WV"/>
            <xs:enumeration value="WY"/>
        </xs:restriction>
    </xs:simpleType>

</xs:schema>